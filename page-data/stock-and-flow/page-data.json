{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/stock-and-flow","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"source\": \"http://snarkmarket.com/2010/4890\",\n  \"author\": \"Robin Sloan\",\n  \"published\": \"2010-01-18T00:00:00.000Z\",\n  \"read\": \"2020-11-27T00:00:00.000Z\",\n  \"tags\": [\"to-process\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"stock-and-flow\"\n  }, \"Stock and Flow\"), mdx(\"p\", null, \"Concept of stock and flow from economics:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stock: static value, like money in the bank or trees in a forest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flow: rate of change, like 15$/h\")), mdx(\"p\", null, \"Metaphor for media in the 21st century:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flow: feed. Constant stream of updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stock: durable content that is as interesting in 2 years as it is today. Discovered via search. Spreads slowly but surely\")), mdx(\"p\", null, \"(the above is paraphrased from the article)\"), mdx(\"p\", null, \"?: is search today still stock? I'm guessing that search engines also take some kind of chronological factor into account\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Flow is a treadmill, and you can\\u2019t spend all of your time running on the treadmill. Well, you can. But then one day you\\u2019ll get off and look around and go: oh man. I\\u2019ve got nothing here.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I\\u2019m not saying you should ignore flow! This is no time to hole up and work in isolation, emerging after years with your work in hand. Everybody will go: huh? Who are you?\")), mdx(\"p\", null, \"[\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"work-in-public\",\n    \"title\": \"Work in Public\"\n  }), \"work-in-public\"), \"]\"), mdx(\"p\", null, \"flow = audience. stock = products. Flow will support stock\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"And the real magic trick is to put them both together. To keep the ball bouncing with your flow\\u2014to maintain that open channel of communication\\u2014while you work on some kick-ass stock in the background. Sacrifice neither. The hybrid strategy.\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"work-in-public\"\n  }, \"Work in Public\"), mdx(\"p\", null, \"(stub)\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"5015e05c-f5fd-524a-a1b5-7a60acb1b22e","fields":{"slug":"/work-in-public","title":"Work in Public"}}}],"inboundReferences":[]},"fields":{"slug":"/stock-and-flow","title":"Stock and Flow"}}},"pageContext":{"id":"c2f152a7-0c09-527d-9028-13029c651236"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}